#[cfg(test)]
mod tests {
use crate::arctorustarcarccmpf::*;

#[rewrite(main)]
#[test]
  fn test_0() {
    assert_eq!(call!(oeq_f32(-3.14000000000000012434e+00, -1.00000000000000000000e+00)), false);
    assert_eq!(call!(oeq_f32(-3.14000000000000012434e+00, 0.00000000000000000000e+00)), false);
    assert_eq!(call!(oeq_f32(-3.14000000000000012434e+00, 1.00000000000000000000e+00)), false);
    assert_eq!(call!(oeq_f32(-3.14000000000000012434e+00, 3.14000000000000012434e+00)), false);
    assert_eq!(call!(oeq_f32(-1.00000000000000000000e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(oeq_f32(-1.00000000000000000000e+00, 0.00000000000000000000e+00)), false);
    assert_eq!(call!(oeq_f32(-1.00000000000000000000e+00, 1.00000000000000000000e+00)), false);
    assert_eq!(call!(oeq_f32(-1.00000000000000000000e+00, 3.14000000000000012434e+00)), false);
    assert_eq!(call!(oeq_f32(0.00000000000000000000e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(oeq_f32(0.00000000000000000000e+00, -1.00000000000000000000e+00)), false);
  }
  #[rewrite(main)]
  #[test]
  fn test_1() {
    assert_eq!(call!(oeq_f32(0.00000000000000000000e+00, 1.00000000000000000000e+00)), false);
    assert_eq!(call!(oeq_f32(0.00000000000000000000e+00, 3.14000000000000012434e+00)), false);
    assert_eq!(call!(oeq_f32(1.00000000000000000000e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(oeq_f32(1.00000000000000000000e+00, -1.00000000000000000000e+00)), false);
    assert_eq!(call!(oeq_f32(1.00000000000000000000e+00, 0.00000000000000000000e+00)), false);
    assert_eq!(call!(oeq_f32(1.00000000000000000000e+00, 3.14000000000000012434e+00)), false);
    assert_eq!(call!(oeq_f32(3.14000000000000012434e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(oeq_f32(3.14000000000000012434e+00, -1.00000000000000000000e+00)), false);
    assert_eq!(call!(oeq_f32(3.14000000000000012434e+00, 0.00000000000000000000e+00)), false);
    assert_eq!(call!(oeq_f32(3.14000000000000012434e+00, 1.00000000000000000000e+00)), false);
  }
  #[rewrite(main)]
  #[test]
  fn test_2() {
    assert_eq!(call!(oeq_f32(-3.14000000000000012434e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(oeq_f32(-1.00000000000000000000e+00, -1.00000000000000000000e+00)), true);
    assert_eq!(call!(oeq_f32(0.00000000000000000000e+00, 0.00000000000000000000e+00)), true);
    assert_eq!(call!(oeq_f32(1.00000000000000000000e+00, 1.00000000000000000000e+00)), true);
    assert_eq!(call!(oeq_f32(3.14000000000000012434e+00, 3.14000000000000012434e+00)), true);
    assert_eq!(call!(oeq_f64(-3.14000000000000012434e+00, -1.00000000000000000000e+00)), false);
    assert_eq!(call!(oeq_f64(-3.14000000000000012434e+00, 0.00000000000000000000e+00)), false);
    assert_eq!(call!(oeq_f64(-3.14000000000000012434e+00, 1.00000000000000000000e+00)), false);
    assert_eq!(call!(oeq_f64(-3.14000000000000012434e+00, 3.14000000000000012434e+00)), false);
    assert_eq!(call!(oeq_f64(-1.00000000000000000000e+00, -3.14000000000000012434e+00)), false);
  }
  #[rewrite(main)]
  #[test]
  fn test_3() {
    assert_eq!(call!(oeq_f64(-1.00000000000000000000e+00, 0.00000000000000000000e+00)), false);
    assert_eq!(call!(oeq_f64(-1.00000000000000000000e+00, 1.00000000000000000000e+00)), false);
    assert_eq!(call!(oeq_f64(-1.00000000000000000000e+00, 3.14000000000000012434e+00)), false);
    assert_eq!(call!(oeq_f64(0.00000000000000000000e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(oeq_f64(0.00000000000000000000e+00, -1.00000000000000000000e+00)), false);
    assert_eq!(call!(oeq_f64(0.00000000000000000000e+00, 1.00000000000000000000e+00)), false);
    assert_eq!(call!(oeq_f64(0.00000000000000000000e+00, 3.14000000000000012434e+00)), false);
    assert_eq!(call!(oeq_f64(1.00000000000000000000e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(oeq_f64(1.00000000000000000000e+00, -1.00000000000000000000e+00)), false);
    assert_eq!(call!(oeq_f64(1.00000000000000000000e+00, 0.00000000000000000000e+00)), false);
  }
  #[rewrite(main)]
  #[test]
  fn test_4() {
    assert_eq!(call!(oeq_f64(1.00000000000000000000e+00, 3.14000000000000012434e+00)), false);
    assert_eq!(call!(oeq_f64(3.14000000000000012434e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(oeq_f64(3.14000000000000012434e+00, -1.00000000000000000000e+00)), false);
    assert_eq!(call!(oeq_f64(3.14000000000000012434e+00, 0.00000000000000000000e+00)), false);
    assert_eq!(call!(oeq_f64(3.14000000000000012434e+00, 1.00000000000000000000e+00)), false);
    assert_eq!(call!(oeq_f64(-3.14000000000000012434e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(oeq_f64(-1.00000000000000000000e+00, -1.00000000000000000000e+00)), true);
    assert_eq!(call!(oeq_f64(0.00000000000000000000e+00, 0.00000000000000000000e+00)), true);
    assert_eq!(call!(oeq_f64(1.00000000000000000000e+00, 1.00000000000000000000e+00)), true);
    assert_eq!(call!(oeq_f64(3.14000000000000012434e+00, 3.14000000000000012434e+00)), true);
  }
  #[rewrite(main)]
  #[test]
  fn test_5() {
    assert_eq!(call!(oge_f32(-3.14000000000000012434e+00, -1.00000000000000000000e+00)), false);
    assert_eq!(call!(oge_f32(-3.14000000000000012434e+00, 0.00000000000000000000e+00)), false);
    assert_eq!(call!(oge_f32(-3.14000000000000012434e+00, 1.00000000000000000000e+00)), false);
    assert_eq!(call!(oge_f32(-3.14000000000000012434e+00, 3.14000000000000012434e+00)), false);
    assert_eq!(call!(oge_f32(-1.00000000000000000000e+00, 0.00000000000000000000e+00)), false);
    assert_eq!(call!(oge_f32(-1.00000000000000000000e+00, 1.00000000000000000000e+00)), false);
    assert_eq!(call!(oge_f32(-1.00000000000000000000e+00, 3.14000000000000012434e+00)), false);
    assert_eq!(call!(oge_f32(0.00000000000000000000e+00, 1.00000000000000000000e+00)), false);
    assert_eq!(call!(oge_f32(0.00000000000000000000e+00, 3.14000000000000012434e+00)), false);
    assert_eq!(call!(oge_f32(1.00000000000000000000e+00, 3.14000000000000012434e+00)), false);
  }
  #[rewrite(main)]
  #[test]
  fn test_6() {
    assert_eq!(call!(oge_f32(-3.14000000000000012434e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(oge_f32(-1.00000000000000000000e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(oge_f32(-1.00000000000000000000e+00, -1.00000000000000000000e+00)), true);
    assert_eq!(call!(oge_f32(0.00000000000000000000e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(oge_f32(0.00000000000000000000e+00, -1.00000000000000000000e+00)), true);
    assert_eq!(call!(oge_f32(0.00000000000000000000e+00, 0.00000000000000000000e+00)), true);
    assert_eq!(call!(oge_f32(1.00000000000000000000e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(oge_f32(1.00000000000000000000e+00, -1.00000000000000000000e+00)), true);
    assert_eq!(call!(oge_f32(1.00000000000000000000e+00, 0.00000000000000000000e+00)), true);
    assert_eq!(call!(oge_f32(1.00000000000000000000e+00, 1.00000000000000000000e+00)), true);
  }
  #[rewrite(main)]
  #[test]
  fn test_7() {
    assert_eq!(call!(oge_f32(3.14000000000000012434e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(oge_f32(3.14000000000000012434e+00, -1.00000000000000000000e+00)), true);
    assert_eq!(call!(oge_f32(3.14000000000000012434e+00, 0.00000000000000000000e+00)), true);
    assert_eq!(call!(oge_f32(3.14000000000000012434e+00, 1.00000000000000000000e+00)), true);
    assert_eq!(call!(oge_f32(3.14000000000000012434e+00, 3.14000000000000012434e+00)), true);
    assert_eq!(call!(oge_f64(-3.14000000000000012434e+00, -1.00000000000000000000e+00)), false);
    assert_eq!(call!(oge_f64(-3.14000000000000012434e+00, 0.00000000000000000000e+00)), false);
    assert_eq!(call!(oge_f64(-3.14000000000000012434e+00, 1.00000000000000000000e+00)), false);
    assert_eq!(call!(oge_f64(-3.14000000000000012434e+00, 3.14000000000000012434e+00)), false);
    assert_eq!(call!(oge_f64(-1.00000000000000000000e+00, 0.00000000000000000000e+00)), false);
  }
  #[rewrite(main)]
  #[test]
  fn test_8() {
    assert_eq!(call!(oge_f64(-1.00000000000000000000e+00, 1.00000000000000000000e+00)), false);
    assert_eq!(call!(oge_f64(-1.00000000000000000000e+00, 3.14000000000000012434e+00)), false);
    assert_eq!(call!(oge_f64(0.00000000000000000000e+00, 1.00000000000000000000e+00)), false);
    assert_eq!(call!(oge_f64(0.00000000000000000000e+00, 3.14000000000000012434e+00)), false);
    assert_eq!(call!(oge_f64(1.00000000000000000000e+00, 3.14000000000000012434e+00)), false);
    assert_eq!(call!(oge_f64(-3.14000000000000012434e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(oge_f64(-1.00000000000000000000e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(oge_f64(-1.00000000000000000000e+00, -1.00000000000000000000e+00)), true);
    assert_eq!(call!(oge_f64(0.00000000000000000000e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(oge_f64(0.00000000000000000000e+00, -1.00000000000000000000e+00)), true);
  }
  #[rewrite(main)]
  #[test]
  fn test_9() {
    assert_eq!(call!(oge_f64(0.00000000000000000000e+00, 0.00000000000000000000e+00)), true);
    assert_eq!(call!(oge_f64(1.00000000000000000000e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(oge_f64(1.00000000000000000000e+00, -1.00000000000000000000e+00)), true);
    assert_eq!(call!(oge_f64(1.00000000000000000000e+00, 0.00000000000000000000e+00)), true);
    assert_eq!(call!(oge_f64(1.00000000000000000000e+00, 1.00000000000000000000e+00)), true);
    assert_eq!(call!(oge_f64(3.14000000000000012434e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(oge_f64(3.14000000000000012434e+00, -1.00000000000000000000e+00)), true);
    assert_eq!(call!(oge_f64(3.14000000000000012434e+00, 0.00000000000000000000e+00)), true);
    assert_eq!(call!(oge_f64(3.14000000000000012434e+00, 1.00000000000000000000e+00)), true);
    assert_eq!(call!(oge_f64(3.14000000000000012434e+00, 3.14000000000000012434e+00)), true);
  }
  #[rewrite(main)]
  #[test]
  fn test_10() {
    assert_eq!(call!(ogt_f32(-3.14000000000000012434e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(ogt_f32(-3.14000000000000012434e+00, -1.00000000000000000000e+00)), false);
    assert_eq!(call!(ogt_f32(-3.14000000000000012434e+00, 0.00000000000000000000e+00)), false);
    assert_eq!(call!(ogt_f32(-3.14000000000000012434e+00, 1.00000000000000000000e+00)), false);
    assert_eq!(call!(ogt_f32(-3.14000000000000012434e+00, 3.14000000000000012434e+00)), false);
    assert_eq!(call!(ogt_f32(-1.00000000000000000000e+00, -1.00000000000000000000e+00)), false);
    assert_eq!(call!(ogt_f32(-1.00000000000000000000e+00, 0.00000000000000000000e+00)), false);
    assert_eq!(call!(ogt_f32(-1.00000000000000000000e+00, 1.00000000000000000000e+00)), false);
    assert_eq!(call!(ogt_f32(-1.00000000000000000000e+00, 3.14000000000000012434e+00)), false);
    assert_eq!(call!(ogt_f32(0.00000000000000000000e+00, 0.00000000000000000000e+00)), false);
  }
  #[rewrite(main)]
  #[test]
  fn test_11() {
    assert_eq!(call!(ogt_f32(0.00000000000000000000e+00, 1.00000000000000000000e+00)), false);
    assert_eq!(call!(ogt_f32(0.00000000000000000000e+00, 3.14000000000000012434e+00)), false);
    assert_eq!(call!(ogt_f32(1.00000000000000000000e+00, 1.00000000000000000000e+00)), false);
    assert_eq!(call!(ogt_f32(1.00000000000000000000e+00, 3.14000000000000012434e+00)), false);
    assert_eq!(call!(ogt_f32(3.14000000000000012434e+00, 3.14000000000000012434e+00)), false);
    assert_eq!(call!(ogt_f32(-1.00000000000000000000e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(ogt_f32(0.00000000000000000000e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(ogt_f32(0.00000000000000000000e+00, -1.00000000000000000000e+00)), true);
    assert_eq!(call!(ogt_f32(1.00000000000000000000e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(ogt_f32(1.00000000000000000000e+00, -1.00000000000000000000e+00)), true);
  }
  #[rewrite(main)]
  #[test]
  fn test_12() {
    assert_eq!(call!(ogt_f32(1.00000000000000000000e+00, 0.00000000000000000000e+00)), true);
    assert_eq!(call!(ogt_f32(3.14000000000000012434e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(ogt_f32(3.14000000000000012434e+00, -1.00000000000000000000e+00)), true);
    assert_eq!(call!(ogt_f32(3.14000000000000012434e+00, 0.00000000000000000000e+00)), true);
    assert_eq!(call!(ogt_f32(3.14000000000000012434e+00, 1.00000000000000000000e+00)), true);
    assert_eq!(call!(ogt_f64(-3.14000000000000012434e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(ogt_f64(-3.14000000000000012434e+00, -1.00000000000000000000e+00)), false);
    assert_eq!(call!(ogt_f64(-3.14000000000000012434e+00, 0.00000000000000000000e+00)), false);
    assert_eq!(call!(ogt_f64(-3.14000000000000012434e+00, 1.00000000000000000000e+00)), false);
    assert_eq!(call!(ogt_f64(-3.14000000000000012434e+00, 3.14000000000000012434e+00)), false);
  }
  #[rewrite(main)]
  #[test]
  fn test_13() {
    assert_eq!(call!(ogt_f64(-1.00000000000000000000e+00, -1.00000000000000000000e+00)), false);
    assert_eq!(call!(ogt_f64(-1.00000000000000000000e+00, 0.00000000000000000000e+00)), false);
    assert_eq!(call!(ogt_f64(-1.00000000000000000000e+00, 1.00000000000000000000e+00)), false);
    assert_eq!(call!(ogt_f64(-1.00000000000000000000e+00, 3.14000000000000012434e+00)), false);
    assert_eq!(call!(ogt_f64(0.00000000000000000000e+00, 0.00000000000000000000e+00)), false);
    assert_eq!(call!(ogt_f64(0.00000000000000000000e+00, 1.00000000000000000000e+00)), false);
    assert_eq!(call!(ogt_f64(0.00000000000000000000e+00, 3.14000000000000012434e+00)), false);
    assert_eq!(call!(ogt_f64(1.00000000000000000000e+00, 1.00000000000000000000e+00)), false);
    assert_eq!(call!(ogt_f64(1.00000000000000000000e+00, 3.14000000000000012434e+00)), false);
    assert_eq!(call!(ogt_f64(3.14000000000000012434e+00, 3.14000000000000012434e+00)), false);
  }
  #[rewrite(main)]
  #[test]
  fn test_14() {
    assert_eq!(call!(ogt_f64(-1.00000000000000000000e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(ogt_f64(0.00000000000000000000e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(ogt_f64(0.00000000000000000000e+00, -1.00000000000000000000e+00)), true);
    assert_eq!(call!(ogt_f64(1.00000000000000000000e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(ogt_f64(1.00000000000000000000e+00, -1.00000000000000000000e+00)), true);
    assert_eq!(call!(ogt_f64(1.00000000000000000000e+00, 0.00000000000000000000e+00)), true);
    assert_eq!(call!(ogt_f64(3.14000000000000012434e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(ogt_f64(3.14000000000000012434e+00, -1.00000000000000000000e+00)), true);
    assert_eq!(call!(ogt_f64(3.14000000000000012434e+00, 0.00000000000000000000e+00)), true);
    assert_eq!(call!(ogt_f64(3.14000000000000012434e+00, 1.00000000000000000000e+00)), true);
  }
  #[rewrite(main)]
  #[test]
  fn test_15() {
    assert_eq!(call!(ole_f32(-1.00000000000000000000e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(ole_f32(0.00000000000000000000e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(ole_f32(0.00000000000000000000e+00, -1.00000000000000000000e+00)), false);
    assert_eq!(call!(ole_f32(1.00000000000000000000e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(ole_f32(1.00000000000000000000e+00, -1.00000000000000000000e+00)), false);
    assert_eq!(call!(ole_f32(1.00000000000000000000e+00, 0.00000000000000000000e+00)), false);
    assert_eq!(call!(ole_f32(3.14000000000000012434e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(ole_f32(3.14000000000000012434e+00, -1.00000000000000000000e+00)), false);
    assert_eq!(call!(ole_f32(3.14000000000000012434e+00, 0.00000000000000000000e+00)), false);
    assert_eq!(call!(ole_f32(3.14000000000000012434e+00, 1.00000000000000000000e+00)), false);
  }
  #[rewrite(main)]
  #[test]
  fn test_16() {
    assert_eq!(call!(ole_f32(-3.14000000000000012434e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(ole_f32(-3.14000000000000012434e+00, -1.00000000000000000000e+00)), true);
    assert_eq!(call!(ole_f32(-3.14000000000000012434e+00, 0.00000000000000000000e+00)), true);
    assert_eq!(call!(ole_f32(-3.14000000000000012434e+00, 1.00000000000000000000e+00)), true);
    assert_eq!(call!(ole_f32(-3.14000000000000012434e+00, 3.14000000000000012434e+00)), true);
    assert_eq!(call!(ole_f32(-1.00000000000000000000e+00, -1.00000000000000000000e+00)), true);
    assert_eq!(call!(ole_f32(-1.00000000000000000000e+00, 0.00000000000000000000e+00)), true);
    assert_eq!(call!(ole_f32(-1.00000000000000000000e+00, 1.00000000000000000000e+00)), true);
    assert_eq!(call!(ole_f32(-1.00000000000000000000e+00, 3.14000000000000012434e+00)), true);
    assert_eq!(call!(ole_f32(0.00000000000000000000e+00, 0.00000000000000000000e+00)), true);
  }
  #[rewrite(main)]
  #[test]
  fn test_17() {
    assert_eq!(call!(ole_f32(0.00000000000000000000e+00, 1.00000000000000000000e+00)), true);
    assert_eq!(call!(ole_f32(0.00000000000000000000e+00, 3.14000000000000012434e+00)), true);
    assert_eq!(call!(ole_f32(1.00000000000000000000e+00, 1.00000000000000000000e+00)), true);
    assert_eq!(call!(ole_f32(1.00000000000000000000e+00, 3.14000000000000012434e+00)), true);
    assert_eq!(call!(ole_f32(3.14000000000000012434e+00, 3.14000000000000012434e+00)), true);
    assert_eq!(call!(ole_f64(-1.00000000000000000000e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(ole_f64(0.00000000000000000000e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(ole_f64(0.00000000000000000000e+00, -1.00000000000000000000e+00)), false);
    assert_eq!(call!(ole_f64(1.00000000000000000000e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(ole_f64(1.00000000000000000000e+00, -1.00000000000000000000e+00)), false);
  }
  #[rewrite(main)]
  #[test]
  fn test_18() {
    assert_eq!(call!(ole_f64(1.00000000000000000000e+00, 0.00000000000000000000e+00)), false);
    assert_eq!(call!(ole_f64(3.14000000000000012434e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(ole_f64(3.14000000000000012434e+00, -1.00000000000000000000e+00)), false);
    assert_eq!(call!(ole_f64(3.14000000000000012434e+00, 0.00000000000000000000e+00)), false);
    assert_eq!(call!(ole_f64(3.14000000000000012434e+00, 1.00000000000000000000e+00)), false);
    assert_eq!(call!(ole_f64(-3.14000000000000012434e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(ole_f64(-3.14000000000000012434e+00, -1.00000000000000000000e+00)), true);
    assert_eq!(call!(ole_f64(-3.14000000000000012434e+00, 0.00000000000000000000e+00)), true);
    assert_eq!(call!(ole_f64(-3.14000000000000012434e+00, 1.00000000000000000000e+00)), true);
    assert_eq!(call!(ole_f64(-3.14000000000000012434e+00, 3.14000000000000012434e+00)), true);
  }
  #[rewrite(main)]
  #[test]
  fn test_19() {
    assert_eq!(call!(ole_f64(-1.00000000000000000000e+00, -1.00000000000000000000e+00)), true);
    assert_eq!(call!(ole_f64(-1.00000000000000000000e+00, 0.00000000000000000000e+00)), true);
    assert_eq!(call!(ole_f64(-1.00000000000000000000e+00, 1.00000000000000000000e+00)), true);
    assert_eq!(call!(ole_f64(-1.00000000000000000000e+00, 3.14000000000000012434e+00)), true);
    assert_eq!(call!(ole_f64(0.00000000000000000000e+00, 0.00000000000000000000e+00)), true);
    assert_eq!(call!(ole_f64(0.00000000000000000000e+00, 1.00000000000000000000e+00)), true);
    assert_eq!(call!(ole_f64(0.00000000000000000000e+00, 3.14000000000000012434e+00)), true);
    assert_eq!(call!(ole_f64(1.00000000000000000000e+00, 1.00000000000000000000e+00)), true);
    assert_eq!(call!(ole_f64(1.00000000000000000000e+00, 3.14000000000000012434e+00)), true);
    assert_eq!(call!(ole_f64(3.14000000000000012434e+00, 3.14000000000000012434e+00)), true);
  }
  #[rewrite(main)]
  #[test]
  fn test_20() {
    assert_eq!(call!(olt_f32(-3.14000000000000012434e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(olt_f32(-1.00000000000000000000e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(olt_f32(-1.00000000000000000000e+00, -1.00000000000000000000e+00)), false);
    assert_eq!(call!(olt_f32(0.00000000000000000000e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(olt_f32(0.00000000000000000000e+00, -1.00000000000000000000e+00)), false);
    assert_eq!(call!(olt_f32(0.00000000000000000000e+00, 0.00000000000000000000e+00)), false);
    assert_eq!(call!(olt_f32(1.00000000000000000000e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(olt_f32(1.00000000000000000000e+00, -1.00000000000000000000e+00)), false);
    assert_eq!(call!(olt_f32(1.00000000000000000000e+00, 0.00000000000000000000e+00)), false);
    assert_eq!(call!(olt_f32(1.00000000000000000000e+00, 1.00000000000000000000e+00)), false);
  }
  #[rewrite(main)]
  #[test]
  fn test_21() {
    assert_eq!(call!(olt_f32(3.14000000000000012434e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(olt_f32(3.14000000000000012434e+00, -1.00000000000000000000e+00)), false);
    assert_eq!(call!(olt_f32(3.14000000000000012434e+00, 0.00000000000000000000e+00)), false);
    assert_eq!(call!(olt_f32(3.14000000000000012434e+00, 1.00000000000000000000e+00)), false);
    assert_eq!(call!(olt_f32(3.14000000000000012434e+00, 3.14000000000000012434e+00)), false);
    assert_eq!(call!(olt_f32(-3.14000000000000012434e+00, -1.00000000000000000000e+00)), true);
    assert_eq!(call!(olt_f32(-3.14000000000000012434e+00, 0.00000000000000000000e+00)), true);
    assert_eq!(call!(olt_f32(-3.14000000000000012434e+00, 1.00000000000000000000e+00)), true);
    assert_eq!(call!(olt_f32(-3.14000000000000012434e+00, 3.14000000000000012434e+00)), true);
    assert_eq!(call!(olt_f32(-1.00000000000000000000e+00, 0.00000000000000000000e+00)), true);
  }
  #[rewrite(main)]
  #[test]
  fn test_22() {
    assert_eq!(call!(olt_f32(-1.00000000000000000000e+00, 1.00000000000000000000e+00)), true);
    assert_eq!(call!(olt_f32(-1.00000000000000000000e+00, 3.14000000000000012434e+00)), true);
    assert_eq!(call!(olt_f32(0.00000000000000000000e+00, 1.00000000000000000000e+00)), true);
    assert_eq!(call!(olt_f32(0.00000000000000000000e+00, 3.14000000000000012434e+00)), true);
    assert_eq!(call!(olt_f32(1.00000000000000000000e+00, 3.14000000000000012434e+00)), true);
    assert_eq!(call!(olt_f64(-3.14000000000000012434e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(olt_f64(-1.00000000000000000000e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(olt_f64(-1.00000000000000000000e+00, -1.00000000000000000000e+00)), false);
    assert_eq!(call!(olt_f64(0.00000000000000000000e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(olt_f64(0.00000000000000000000e+00, -1.00000000000000000000e+00)), false);
  }
  #[rewrite(main)]
  #[test]
  fn test_23() {
    assert_eq!(call!(olt_f64(0.00000000000000000000e+00, 0.00000000000000000000e+00)), false);
    assert_eq!(call!(olt_f64(1.00000000000000000000e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(olt_f64(1.00000000000000000000e+00, -1.00000000000000000000e+00)), false);
    assert_eq!(call!(olt_f64(1.00000000000000000000e+00, 0.00000000000000000000e+00)), false);
    assert_eq!(call!(olt_f64(1.00000000000000000000e+00, 1.00000000000000000000e+00)), false);
    assert_eq!(call!(olt_f64(3.14000000000000012434e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(olt_f64(3.14000000000000012434e+00, -1.00000000000000000000e+00)), false);
    assert_eq!(call!(olt_f64(3.14000000000000012434e+00, 0.00000000000000000000e+00)), false);
    assert_eq!(call!(olt_f64(3.14000000000000012434e+00, 1.00000000000000000000e+00)), false);
    assert_eq!(call!(olt_f64(3.14000000000000012434e+00, 3.14000000000000012434e+00)), false);
  }
  #[rewrite(main)]
  #[test]
  fn test_24() {
    assert_eq!(call!(olt_f64(-3.14000000000000012434e+00, -1.00000000000000000000e+00)), true);
    assert_eq!(call!(olt_f64(-3.14000000000000012434e+00, 0.00000000000000000000e+00)), true);
    assert_eq!(call!(olt_f64(-3.14000000000000012434e+00, 1.00000000000000000000e+00)), true);
    assert_eq!(call!(olt_f64(-3.14000000000000012434e+00, 3.14000000000000012434e+00)), true);
    assert_eq!(call!(olt_f64(-1.00000000000000000000e+00, 0.00000000000000000000e+00)), true);
    assert_eq!(call!(olt_f64(-1.00000000000000000000e+00, 1.00000000000000000000e+00)), true);
    assert_eq!(call!(olt_f64(-1.00000000000000000000e+00, 3.14000000000000012434e+00)), true);
    assert_eq!(call!(olt_f64(0.00000000000000000000e+00, 1.00000000000000000000e+00)), true);
    assert_eq!(call!(olt_f64(0.00000000000000000000e+00, 3.14000000000000012434e+00)), true);
    assert_eq!(call!(olt_f64(1.00000000000000000000e+00, 3.14000000000000012434e+00)), true);
  }
  #[rewrite(main)]
  #[test]
  fn test_25() {
    assert_eq!(call!(one_f32(-3.14000000000000012434e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(one_f32(-1.00000000000000000000e+00, -1.00000000000000000000e+00)), false);
    assert_eq!(call!(one_f32(0.00000000000000000000e+00, 0.00000000000000000000e+00)), false);
    assert_eq!(call!(one_f32(1.00000000000000000000e+00, 1.00000000000000000000e+00)), false);
    assert_eq!(call!(one_f32(3.14000000000000012434e+00, 3.14000000000000012434e+00)), false);
    assert_eq!(call!(one_f32(-3.14000000000000012434e+00, -1.00000000000000000000e+00)), true);
    assert_eq!(call!(one_f32(-3.14000000000000012434e+00, 0.00000000000000000000e+00)), true);
    assert_eq!(call!(one_f32(-3.14000000000000012434e+00, 1.00000000000000000000e+00)), true);
    assert_eq!(call!(one_f32(-3.14000000000000012434e+00, 3.14000000000000012434e+00)), true);
    assert_eq!(call!(one_f32(-1.00000000000000000000e+00, -3.14000000000000012434e+00)), true);
  }
  #[rewrite(main)]
  #[test]
  fn test_26() {
    assert_eq!(call!(one_f32(-1.00000000000000000000e+00, 0.00000000000000000000e+00)), true);
    assert_eq!(call!(one_f32(-1.00000000000000000000e+00, 1.00000000000000000000e+00)), true);
    assert_eq!(call!(one_f32(-1.00000000000000000000e+00, 3.14000000000000012434e+00)), true);
    assert_eq!(call!(one_f32(0.00000000000000000000e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(one_f32(0.00000000000000000000e+00, -1.00000000000000000000e+00)), true);
    assert_eq!(call!(one_f32(0.00000000000000000000e+00, 1.00000000000000000000e+00)), true);
    assert_eq!(call!(one_f32(0.00000000000000000000e+00, 3.14000000000000012434e+00)), true);
    assert_eq!(call!(one_f32(1.00000000000000000000e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(one_f32(1.00000000000000000000e+00, -1.00000000000000000000e+00)), true);
    assert_eq!(call!(one_f32(1.00000000000000000000e+00, 0.00000000000000000000e+00)), true);
  }
  #[rewrite(main)]
  #[test]
  fn test_27() {
    assert_eq!(call!(one_f32(1.00000000000000000000e+00, 3.14000000000000012434e+00)), true);
    assert_eq!(call!(one_f32(3.14000000000000012434e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(one_f32(3.14000000000000012434e+00, -1.00000000000000000000e+00)), true);
    assert_eq!(call!(one_f32(3.14000000000000012434e+00, 0.00000000000000000000e+00)), true);
    assert_eq!(call!(one_f32(3.14000000000000012434e+00, 1.00000000000000000000e+00)), true);
    assert_eq!(call!(one_f64(-3.14000000000000012434e+00, -3.14000000000000012434e+00)), false);
    assert_eq!(call!(one_f64(-1.00000000000000000000e+00, -1.00000000000000000000e+00)), false);
    assert_eq!(call!(one_f64(0.00000000000000000000e+00, 0.00000000000000000000e+00)), false);
    assert_eq!(call!(one_f64(1.00000000000000000000e+00, 1.00000000000000000000e+00)), false);
    assert_eq!(call!(one_f64(3.14000000000000012434e+00, 3.14000000000000012434e+00)), false);
  }
  #[rewrite(main)]
  #[test]
  fn test_28() {
    assert_eq!(call!(one_f64(-3.14000000000000012434e+00, -1.00000000000000000000e+00)), true);
    assert_eq!(call!(one_f64(-3.14000000000000012434e+00, 0.00000000000000000000e+00)), true);
    assert_eq!(call!(one_f64(-3.14000000000000012434e+00, 1.00000000000000000000e+00)), true);
    assert_eq!(call!(one_f64(-3.14000000000000012434e+00, 3.14000000000000012434e+00)), true);
    assert_eq!(call!(one_f64(-1.00000000000000000000e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(one_f64(-1.00000000000000000000e+00, 0.00000000000000000000e+00)), true);
    assert_eq!(call!(one_f64(-1.00000000000000000000e+00, 1.00000000000000000000e+00)), true);
    assert_eq!(call!(one_f64(-1.00000000000000000000e+00, 3.14000000000000012434e+00)), true);
    assert_eq!(call!(one_f64(0.00000000000000000000e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(one_f64(0.00000000000000000000e+00, -1.00000000000000000000e+00)), true);
  }
  #[rewrite(main)]
  #[test]
  fn test_29() {
    assert_eq!(call!(one_f64(0.00000000000000000000e+00, 1.00000000000000000000e+00)), true);
    assert_eq!(call!(one_f64(0.00000000000000000000e+00, 3.14000000000000012434e+00)), true);
    assert_eq!(call!(one_f64(1.00000000000000000000e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(one_f64(1.00000000000000000000e+00, -1.00000000000000000000e+00)), true);
    assert_eq!(call!(one_f64(1.00000000000000000000e+00, 0.00000000000000000000e+00)), true);
    assert_eq!(call!(one_f64(1.00000000000000000000e+00, 3.14000000000000012434e+00)), true);
    assert_eq!(call!(one_f64(3.14000000000000012434e+00, -3.14000000000000012434e+00)), true);
    assert_eq!(call!(one_f64(3.14000000000000012434e+00, -1.00000000000000000000e+00)), true);
    assert_eq!(call!(one_f64(3.14000000000000012434e+00, 0.00000000000000000000e+00)), true);
    assert_eq!(call!(one_f64(3.14000000000000012434e+00, 1.00000000000000000000e+00)), true);
  }
}
